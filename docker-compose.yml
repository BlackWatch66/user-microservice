version: '3.8'

services:
  # User microservice
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${HTTP_PORT}:${HTTP_PORT}"  # HTTP API port
      - "${GRPC_PORT}:${GRPC_PORT}" # gRPC port
    environment:
      - DATABASE_URL=root:${MYSQL_ROOT_PASSWORD}@tcp(mysql:${MYSQL_PORT})/${MYSQL_DATABASE}?charset=utf8mb4&parseTime=True&loc=Local
      - REDIS_ADDR=redis:${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY_MINUTES=${JWT_EXPIRY_MINUTES}
      - HTTP_PORT=${HTTP_PORT}
      - GRPC_PORT=${GRPC_PORT}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - user-network

  # MySQL database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

  # Redis cache
  redis:
    image: redis:6.2-alpine
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - user-network

networks:
  user-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: 